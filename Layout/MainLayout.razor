@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject NavigationManager Navigation


<MudThemeProvider @bind-IsDarkMode="_isDarkMode" Theme=" _theme" />

<MudPopoverProvider />

<MudDialogProvider />

<MudSnackbarProvider />

<MudLayout style="display: flex; flex-direction: column; height: 100%;">
    <MudAppBar Elevation="1" Color="Color.Inherit">
        <MudText Typo="Typo.h5" Color="Color.Primary" Class="ml-5" Style="cursor: pointer;" @onclick="@(() => Navigation.NavigateTo("/"))">
            Fake Data Maker
        </MudText>
        <MudSpacer />
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Default" Size="Size.Medium" Edge="Edge.End" Href="https://github.com/andredobbss" Target="_blank" />
        <MudIconButton Icon="@Icons.Custom.Brands.LinkedIn" Color="Color.Default" Size="Size.Medium" Edge="Edge.End" Href="https://www.linkedin.com/in/andre-dobbss" Target="_blank" />
    </MudAppBar>

    <MudMainContent style="display: flex; flex-direction: column; flex: 1;">
        <MudContainer Class="mt-5" style="flex: 1;">
            @Body
        </MudContainer>

        <footer class="mt-auto">
            <MudPaper Class="pa-4 mud-width-full text-center" Elevation="0" Square="true">
                <MudText Typo="Typo.caption" Color="Color.Default">
                    Fake Data Maker © 2025 — Developed by
                    <MudLink Href="https://github.com/andredobbss" Target="_blank">andredobbss</MudLink>
                </MudText>
            </MudPaper>
        </footer>
    </MudMainContent>
</MudLayout>

@code {

    private bool _isDarkMode = true;

    private MudTheme _theme = new()
        {
            Typography = new Typography()
            {
                Default = new DefaultTypography()
                {
                    FontFamily = new[] { "Montserrat", "sans-serif" },
                },
            },

            PaletteDark = new PaletteDark()
            {
                Primary = Colors.Cyan.Darken1,
                Secondary = Colors.Orange.Darken3,
            },

            LayoutProperties = new LayoutProperties()
            {
                DrawerWidthLeft = "260px",
                DrawerWidthRight = "300px"
            }
        };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("onBeforeUnloadHandler.attachUnloadListener");
        }
    }

}
